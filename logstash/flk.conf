input {
        beats {
                port => 9711
                codec => multiline {
                        pattern => "^\[%{YEAR}-%{MONTHNUM}-%{MONTHDAY}[T ]%{HOUR}:?%{MINUTE}(?::?%{SECOND}) %{TZ}\]"
                        negate => "true"
                        what => "previous"
                }
        }
 
}
 
filter {
 #       mutate {
 #               gsub => ["message", "\r", ""]
 #       }
        grok {
                patterns_dir => [ "./patterns" ]
                match => [ "message" , "\[.*\]\s+%{WORD :2a}\s+(?<ibm_file>System(Out|Err))\s+(?<ibm_level>[A-Z])\s+%{TIMESTAMP_1 :log_date}\|(?<loglevel>[\sA-Z]+)\|(?<syscode>\w+)\|(?<uuid>[a-z0-9]+)\|(?<thread_name>.*?)\|%{JAVASTACKTRACEPART_1 :javastack}\|\s-\s(?<message>.*)" ]
                overwrite => [ "message" ]
        }
        if [loglevel] == "DEBUG" {
                drop { }
        }
        if [thread_name] == "server.startup : 1" {
                drop { }
        }
        if [java_file] == "SafeCheckInterceptor.java" {
                drop { }
        }
	if [java_file] == "MyBatisInterceptor.java" {
		grok {
			patterns_dir => [ "./patterns" ]
			match => ["message", "%{SQLMAPPER: sqlmapper}\:\s+\[(?<sql>.*)\]\s+\((?<sql_parms>.*)\)\s%{NUMBER:sql_time:int}ms$" ]
		}
	}
#	if [sql_time] {
#		mutate { convert => { "sql_time" => "integer" } }
#	}
        date{
                match => [ "timestamp" , "yyyy-MM-dd HH:mm:ss.SSS" ]
        }
}
 
output {
        elasticsearch {
                hosts => [ "22.5.64.7:9200" ]
                manage_template => false
                index => "%{[@metadata][beat]}-%{+YYYY.MM.dd}"
                document_type => "%{[@metadata][type]}"
        }
}
